DETAILS_URL = 'http://opml.radiotime.com/Describe.ashx?id=%s'
STATION_DETAILS_URL = 'http://opml.radiotime.com/Describe.ashx?c=nowplaying&id=%s'

RE_ID = Regex('id=(?P<id>(s|p)\d+)')

####################################################################################################
def MetadataObjectForURL(url):

    station_id = RE_ID.search(url).group('id')
    station_details_page = XML.ElementFromURL(STATION_DETAILS_URL % station_id)

    station = station_details_page.xpath("//outline[@key='station']/@text")[0]

    title = None
    hosts = None
    thumb = ''

    try:
        show_id = station_details_page.xpath("//outline[@key='show']/@guide_id")[0]
        show_detail_page = XML.ElementFromURL(DETAILS_URL % show_id)

        try: title = show_detail_page.xpath("//show/title/text()")
        except: pass

        try: hosts = show_detail_page.xpath("//show/hosts/text()")
        except: pass

        try: thumb = show_detail_page.xpath("//show/logo/text()")
        except: pass
    except: pass

    return TrackObject(
        artist = station,
        album = title,
        title = hosts,
        thumb = Resource.ContentsOfURLWithFallback(thumb)
    )

####################################################################################################
def MediaObjectsForURL(url):

   return [MediaObject(
        # container = container,
        # audio_codec = audio_codec,
        # bitrate = bitrate,
        # audio_channels = 2,
        parts = [PartObject(key = Callback(PlayTrack, url=url))]
    )]

####################################################################################################
def PlayTrack(url):

    details = XML.ElementFromURL(url + '&c=ebrowse')
    Log(XML.StringFromElement(details))

    audios = details.xpath("//outline[@type='audio']")
    best_reliability = 0
    for audio in audios:
        reliability = int(audio.get('reliability'))
        if reliability > best_reliability:
            best_reliability = reliability
            stream_url = audio.get('URL')
    Log(stream_url)

    # Log(HTTP.Request(stream_url).content.strip())

    return Redirect(HTTP.Request(stream_url).content.strip())
